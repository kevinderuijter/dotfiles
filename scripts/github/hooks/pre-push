#!/usr/bin/env bash

#
# Author:       Kevin de Ruijter
# Date:         2024-06-09
# Description:  Validate git tag or branch name conventions before pushing.
#

# Function to validate the tag name
validate_tag_name() {
    local tag_name=$1
    local tag_regex='^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

    # Check the the tag name conforms to the tag regex.
    if [[ ! $tag_name =~ $tag_regex ]]; then
        echo "ERROR: Tag name '$tag_name' does not conform to the semantic versioning pattern."
        echo "Expected pattern: MAJOR.MINOR.PATCH[-PRERELEASE][+BUILDMETADATA]"
        echo "Example: v1.0.0, v1.0.0-alpha.1, v1.0.0+20130313144700"
        exit 1
    fi
}

# Function to validate the branch name
validate_branch_name() {
    local branch_name=$1
    local branch_regex='^(feature|bugfix|hotfix|release|experiment)\/[a-z0-9\-]+$'

    # Check if the branch name conforms to the branch name regex.
    if [[ ! $branch_name =~ $branch_regex ]]; then
        echo "ERROR: Branch name '$branch_name' does not conform to the naming convention '<type>/<description>'."
        echo "Type must be one of: feature, bugfix, hotfix, release, experiment."
        echo "Description must be in lowercase letters, numbers, and hyphens."
        echo "Example: feature/add-login"
        exit 1
    fi
}

# Get the list of tags that are being pushed
tags=$(git tag --points-at HEAD)

# Validate each tag
for tag in $tags; do
    validate_tag_name $tag
done

# Get the current branch name
current_branch=$(git symbolic-ref --short HEAD)

# Validate the current branch name
validate_branch_name $current_branch